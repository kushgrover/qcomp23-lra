// Busy-ring asynchronous arbiter.

// Number of components: 453
// Max number of states in a MEC: 2592
// Max state action pairs in a MEC: 13040
// Max successors per action, in a MEC: 16
// Max successors per action, in model: 16
// Min Probability in model: 0.0625

mdp

const double p1 = 7/8; // inverter transition probability
const double p2 = 1/2; // generic transition probability

label "r0" = r0;
label "r1" = r1;
label "r2" = r2;
label "r3" = r3;
label "a0" = a0;
label "a1" = a1;
label "a2" = a2;
label "a3" = a3;
label "g0" = r0 & a0;
label "g1" = r1 & a1;
label "g2" = r2 & a2;
label "g3" = r3 & a3;

module inverter
  t0 : bool init true;

  [inv] t0 = t4 -> p1 : (t0' = !t4) + (1-p1) : true;
endmodule

module client0
  r0 : bool init false;

  [u0] r0 = a0 -> p2 : (r0' = !a0) + (1-p2) : true;
endmodule

module client1 = client0 [ r0 = r1, a0 = a1, u0 = u1 ] endmodule
module client2 = client0 [ r0 = r2, a0 = a2, u0 = u2 ] endmodule
module client3 = client0 [ r0 = r3, a0 = a3, u0 = u3 ] endmodule

module cell0
  a0 : bool init false;
  t1 : bool init false;

  [g0] r0 & !a0 -> p2 : (a0'=true) & (t1'=false) + (1-p2) : true;
  [t1] t0 & !t1 -> p2 : (a0'=false) & (t1'=true) + (1-p2) : true;
  [c0] t1 | a0 -> p2: (a0'=false) & (t1'=false) + (1-p2) : true;
endmodule

module cell1 = cell0 [ a0 = a1, r0 = r1, t0 = t1, t1 = t2, g0 = g1 ] endmodule
module cell2 = cell0 [ a0 = a2, r0 = r2, t0 = t2, t1 = t3, g0 = g2 ] endmodule
module cell3 = cell0 [ a0 = a3, r0 = r3, t0 = t3, t1 = t4, g0 = g3 ] endmodule

rewards "r"
    true : 1;
endrewards
